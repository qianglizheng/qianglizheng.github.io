import{_ as a,c as e,o as l,a as n}from"./app-crvdi8lb.js";const i={},s=n('<p><a name="rxkNu"></a></p><h1 id="多表关系" tabindex="-1"><a class="header-anchor" href="#多表关系"><span>多表关系</span></a></h1><p><a name="kbMN2"></a></p><h2 id="一对多" tabindex="-1"><a class="header-anchor" href="#一对多"><span>一对多</span></a></h2><ul><li>案例：部门与员工的关系</li><li>关系：一个部门对应多个员工，一个员工对应一个部门</li><li>实现：在多的一方建立外键，指向一的一方的主键 <a name="WnbCD"></a></li></ul><h2 id="多对多" tabindex="-1"><a class="header-anchor" href="#多对多"><span>多对多</span></a></h2><ul><li>案例：学生与课程的关系</li><li>关系：一个学生可以选修多门课程，一门课程也可以供多门学生选择</li><li>实现：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键 <a name="u2wnZ"></a></li></ul><h2 id="一对一" tabindex="-1"><a class="header-anchor" href="#一对一"><span>一对一</span></a></h2><ul><li>案例：用户与用户详情的关系</li><li>关系：一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提高操作效率</li><li>实现：在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的（unique） <a name="PxeIh"></a></li></ul><h1 id="多表查询概述" tabindex="-1"><a class="header-anchor" href="#多表查询概述"><span>多表查询概述</span></a></h1><p><a name="LYkUC"></a></p><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>指从多张表中查询数据 <a name="uU1iR"></a></p><h2 id="笛卡尔积" tabindex="-1"><a class="header-anchor" href="#笛卡尔积"><span>笛卡尔积</span></a></h2><p>笛卡尔乘积是指在数学中，两个集合A集合和B集合的所有组合情况。（在多表查询时，需要消除无效的笛卡尔积） <a name="vBRsC"></a></p><h2 id="多表查询分类" tabindex="-1"><a class="header-anchor" href="#多表查询分类"><span>多表查询分类</span></a></h2><p><a name="tMJMP"></a></p><h3 id="连接查询" tabindex="-1"><a class="header-anchor" href="#连接查询"><span>连接查询</span></a></h3><p><a name="GYBsA"></a></p><h4 id="内连接" tabindex="-1"><a class="header-anchor" href="#内连接"><span>内连接</span></a></h4><p>相当于查询A、B交集部分数据</p><ul><li>隐式内连接 <code>select 字段列表 from 表1,表2 where 条件...;</code></li><li>显示内连接<code>select 字段列表 from 表1 [inner] join 表2 on 连接条件...;</code><a name="Oqzmj"></a></li></ul><h4 id="外连接" tabindex="-1"><a class="header-anchor" href="#外连接"><span>外连接</span></a></h4><ul><li>左外连接：查询左表所有数据，以及两张表交集部分数据 <ul><li><code>select 字段列表 from 表1 left [outer] join 表2 on 条件...;</code></li></ul></li><li>右外连接：查询右表所有数据，以及两张表交集部分数据 <ul><li><code>select 字段列表 from 表1 right [outer] join 表2 on 条件...;</code><a name="vu3dG"></a></li></ul></li></ul><h4 id="自连接" tabindex="-1"><a class="header-anchor" href="#自连接"><span>自连接</span></a></h4><p>当前表与自身的连接查询，自连接必须使用表别名<br><code>select 字段列表 from 表A 别名A join 表A 别名B on 条件...;</code><a name="CbRw8"></a></p><h3 id="联合查询-union-union-all" tabindex="-1"><a class="header-anchor" href="#联合查询-union-union-all"><span>联合查询-union,union all</span></a></h3><ul><li>对应union查询，就是把多次查询的结果合并起来，形成一个新的查询结果集</li><li><code>select 字段列表 from 表A ... union [all] select 字段列表 from 表B...;</code></li><li>union会将查询的结果去重</li><li>union会直接合并，不会去重</li><li>对与联合查询的多张表的列数必须保持一致，字段的类型也需要保持一致 <a name="ApTZR"></a></li></ul><h3 id="子查询" tabindex="-1"><a class="header-anchor" href="#子查询"><span>子查询</span></a></h3><p><a name="uQ7xl"></a></p><h4 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h4><p>SQL语句中嵌套select语句，称为嵌套查询，又称子查询<br><code>select * from t1 where column1 = (select column1 from t2);</code><br>子查询外部的语句可以是insert update delete select的任何一个 <a name="WaUBR"></a></p><h4 id="标量子查询" tabindex="-1"><a class="header-anchor" href="#标量子查询"><span>标量子查询</span></a></h4><p>子查询的结果为一个单值 <a name="DPCOU"></a></p><h4 id="列子查询" tabindex="-1"><a class="header-anchor" href="#列子查询"><span>列子查询</span></a></h4><p>子查询的结果为一列<br>常用的操作符：</p><ul><li>in</li><li>not in</li><li>any 任意一个满足即可 （&lt;any()）</li><li>some 同any</li><li>all 所有值都要满足 （&gt; all()） <a name="jCryj"></a></li></ul><h4 id="行子查询" tabindex="-1"><a class="header-anchor" href="#行子查询"><span>行子查询</span></a></h4><p>子查询的结果为一行,可以是多列<br>常用的操作符</p><ul><li>=</li><li>&lt;&gt;</li><li>in</li><li>not in</li></ul><p><code>select * from user where (username,nickname) = (select username,nickname from user);</code><a name="D8AMC"></a></p><h4 id="表子查询" tabindex="-1"><a class="header-anchor" href="#表子查询"><span>表子查询</span></a></h4><p>子查询的结果为多行多列，通常作为表与其他表连接查询<br>常用的操作符</p><ul><li>in</li></ul><p><code>select * from user where (username,nickname) in (select username,nickname from user);</code></p>',45),r=[s];function h(c,o){return l(),e("div",null,r)}const d=a(i,[["render",h],["__file","多表查询.html.vue"]]),p=JSON.parse('{"path":"/%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2.html","title":"多表关系","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一对多","slug":"一对多","link":"#一对多","children":[]},{"level":2,"title":"多对多","slug":"多对多","link":"#多对多","children":[]},{"level":2,"title":"一对一","slug":"一对一","link":"#一对一","children":[]},{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"笛卡尔积","slug":"笛卡尔积","link":"#笛卡尔积","children":[]},{"level":2,"title":"多表查询分类","slug":"多表查询分类","link":"#多表查询分类","children":[{"level":3,"title":"连接查询","slug":"连接查询","link":"#连接查询","children":[]},{"level":3,"title":"联合查询-union,union all","slug":"联合查询-union-union-all","link":"#联合查询-union-union-all","children":[]},{"level":3,"title":"子查询","slug":"子查询","link":"#子查询","children":[]}]}],"git":{},"filePathRelative":"多表查询.md"}');export{d as comp,p as data};
